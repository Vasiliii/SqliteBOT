import telebot
import config
import sqlite3

from sqlite3.dbapi2 import connect
from telebot import types

bot = telebot.TeleBot(config.TOKEN)
name = None
people_id = None

@bot.message_handler(commands=['start', 'create'])
def welcome(message):
    
    sti = open('static/AnimatedSticker.tgs', 'rb')
    conn = sqlite3.connect('test.db')
    cur = conn.cursor()
    
    cur.execute("""CREATE TABLE IF NOT EXISTS users (
        id int primary key,
        admin int pimary key,
        name varchar(70),
        pass varchar(20)
        )""")
    conn.commit()
    
    cur.close()
    conn.close()

    
    murkup = types.ReplyKeyboardMarkup(resize_keyboard=True) 
    murkup.add(config.MainBut0, config.MeinBut1)

    bot.send_sticker(message.chat.id, sti)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Çüëãüèª \n–Ø –±–æ—Ç, —Ä–∞–±–æ—Ç–∞—é—â–∏–π —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö SQLite3 \n–Ø –ï—â—ë –¥–æ—Ä–∞–±–∞—Ç—ã–≤–∞—é—Å—å, –ø–æ—ç—Ç–æ–º—É —á–∞—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—åüò¢', parse_mode = 'html', reply_markup= murkup)
    
@bot.message_handler(content_types=['text'])
def reserch(message):
    if message.text == '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
        
        conn = sqlite3.connect('test.db')
        cur = conn.cursor()
    
        global people_id
        people_id = message.chat.id 
        cur.execute(f"""SELECT id FROM users WHERE id = {people_id}""")
        
        data = cur.fetchone()
        if data is None:
            bot.send_message(message.chat.id, f'–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏–º—è')
            bot.register_next_step_handler(message, user_name)
        else:
            bot.send_message(message.chat.id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã")
    
        cur.close()
        conn.close()
    
    if message.text == '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è':
        conn = sqlite3.connect('test.db')
        cur = conn.cursor()
    
        people_id = message.chat.id 
        cur.execute(f"""SELECT id FROM users WHERE id = {people_id}""")
        data = cur.fetchone()
        
        if data is None:
            bot.send_message(message.chat.id, f'–ò–∑–≤–∏–Ω–∏—Ç–µ –º—ã –Ω–µ –Ω–∞—à–ª–∏ –≤–∞—à id.\n –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Å–º–µ–Ω–∏–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –≤ —Ç–µ–ª–µ–≥—Ä–∞–º\n –ü–æ–∂–∞–ª–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è')
            bot.register_next_step_handler(message, user_auto)
        else:
            cur.execute(f"SELECT admin FROM users WHERE id = {people_id}")
            data1 = cur.fetchall()
            markup = types.InlineKeyboardMarkup()
            markup.add(config.adminBut)
            
            dat = ''
            for el in data1:
                dat += f"{el[0]}"
            
            cur.execute(f"SELECT name FROM users WHERE id = {people_id}")
            name = cur.fetchall()
            
            
            name1 =''
            for el in name:
                name1 += f"{el[0]}"
            
            if dat == '1':
                bot.send_message(message.chat.id, f"–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏‚úÖ, {name1}", reply_markup = markup)
            elif dat == '0':
                bot.send_message(message.chat.id,f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å‚úÖ, {name1}" )
                userPanel(message)
            elif dat == '3':
                bot.send_message(message.chat.id,f"–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ {dat}" )
    
        cur.close()
        conn.close()
    if message.text.lower() == '–≤–æ–π—Ç–∏ –∫–∞–∫ —é–∑–µ—Ä':
        userPanel(message)
        
@bot.callback_query_handler(func= lambda call: call.data =='adminPanel')
def adminPanel(call):
    global people_id
    markup  = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(config.repUserBut)
    conn = sqlite3.connect('test.db')
    cur = conn.cursor()
    
    cur.execute("SELECT * FROM users")
    data = cur.fetchall()
    dat = ''
    
    for el in data:
        dat += f'–∏–º—è: {el[2]} –ø–∞—Ä–æ–ª—å: {el[3]} –¥–æ—Å—Ç—É–ø: {el[1]}\n'
    
    bot.send_message(people_id, dat)
    bot.send_message(people_id, "–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≤–≤–µ–¥—è –µ–≥–æ –∏–º—è –∏–ª–∏ id\n –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                     reply_markup= markup)
    
def userPanel(message):
    markup1 = types.InlineKeyboardMarkup()
    markup1.row(config.userBut0, config.userBut1)
    markup1.row(config.userBut2, config.userBut3)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ —Ä–∞–∑–¥–µ–ª –∫–æ—Ç–æ—Ä—ã–π, —Ö–æ—Ç–∏—Ç–µ –ø–æ—á–∏—Ç–∞—Ç—å', reply_markup = markup1)
    
def user_auto(message):
    global name
    name = message.text.strip()
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")
    bot.register_next_step_handler(message, user_auto_pass)
        
def user_name(message):
    global name 
    name = message.text.strip()
    bot.send_message(message.chat.id, f'–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å')
    bot.register_next_step_handler(message, user_pass)

def user_auto_pass(message):
    password = message.text.strip()
    conn = sqlite3.connect('test.db')
    cur = conn.cursor()
    
    cur.execute(f"SELECT name FROM users WHERE name = '%s'" % (name) )
    data = cur.fetchall()
    cur.execute(f"SELECT pass FROM users WHERE pass = '%s'" % (password) )
    data1 = cur.fetchone()
    
    dat = ''
    for el in data:
        dat+=f'{el[0]}'
    
    if data != None and data1 != None:
        global people_id
        people_id = message.chat.id 
        markup = types.InlineKeyboardMarkup()
        
        markup.add(config.updateBut)
    
        bot.send_message(people_id, f"–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å!ü•≥, {dat}", reply_markup=markup)
    else:
        bot.send_message(people_id, f"–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å.\n–ï—Å–ª–∏ –≤—ã –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Éüò¢üò¢üò¢")

@bot.callback_query_handler(func= lambda call: call.data =='update')
def updata(call):
    global people_id
    
    conn = sqlite3.connect('test.db')
    cur = conn.cursor()
    
    cur.execute("UPDATE users SET id = ? WHERE name = ?", (people_id, name))
    conn.commit()
    
    bot.send_message(people_id, "ID —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω‚úÖ")

def user_pass(message):
    password = message.text.strip()
    conn = sqlite3.connect('test.db')
    cur = conn.cursor()
    
    user_data = [message.chat.id, 0, name, password]
    cur.execute(f"INSERT INTO users VALUES(?,?,?,?)", user_data)
    bot.send_message(message.chat.id, f'–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å‚úÖ')
    
    conn.commit()
    cur.close()
    conn.close()
    
bot.polling(none_stop=True)